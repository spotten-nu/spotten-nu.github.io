{"version":3,"sources":["components/OverridableNumber.tsx","components/WindInput.tsx","components/LeftDrawer.tsx","components/LivePreview.tsx","dropzones.ts","calculation/utils.ts","pdfGenerator.ts","calculation/windEstimator.ts","calculation/spotCalculator.ts","state.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["OverridableNumber","label","helperText","value","defaultValue","onChange","className","unit","step","min","max","TextField","name","type","fullWidth","Math","round","e","Number","target","disabled","undefined","inputProps","InputLabelProps","InputProps","endAdornment","InputAdornment","position","IconButton","color","onClick","fontSize","WindInput","error","useState","textValue","setTextValue","placeholder","direction","speed","wind","str","match","exec","parseWind","onBlur","useStyles","makeStyles","paper","width","form","margin","header","marginTop","input","print","textAlign","LeftDrawer","dropzones","state","dispatch","spot","onPrint","classes","Drawer","variant","anchor","PaperProps","elevation","autoComplete","FormControl","InputLabel","Select","dropzone","id","map","dz","MenuItem","winds","fl100","ground","fixedParams","landingDirection","val","lineOfFlight","offTrack","distance","Button","LivePreview","style","height","backgroundImage","url","backgroundPosition","backgroundSize","filter","top","left","JSON","stringify","allowedLandingDirections","deg2rad","deg","PI","ft2m","ft","kt2ms","kt","m2nm","m","nm2m","nm","rad2deg","rad","normalizeAngle","x","normalizeAngleDiff","renderAsBlobURL","a","stream","BlobStream","PdfGenerator","Promise","resolve","on","toBlobURL","data","mapScale","doc","pilotInfoWidth","pilotInfoHeight","windInfoWidth","windInfoHeight","jumperInfoWidth","jumperInfoHeight","footerWidth","footerHeight","this","PDFDocument","size","layout","info","Title","pipe","scale","translate","renderPilotInfo","renderWinds","renderJumperInfo","renderFooter","renderMap","end","heading","transverseOffset","longitudinalOffset","red","redLight","offsetStr","toFixed","line1","angleStr","text","widthOfString","side","abs","bearing","y","reverse","save","renderOneWind","restore","altitudeDescr","align","circle","lineWidth","stroke","i","rotate","moveTo","lineTo","ms","closePath","fill","timeBetweenGroups","heightOfString","time","Intl","DateTimeFormat","year","month","day","hour","minute","format","fullText","w","h","continued","link","traceOutline","clip","imageData","metersPerPixel","image","renderSpot","renderScale","deplCircle","radius","exitCircle","denominator","NumberFormat","maximumFractionDigits","slice","WindEstimator","length","Error","sort","b","altitude","interpolate","lower","upper","alpha","angleDiff","SpotCalculator","config","fixedTrack","fixedTransverseOffset","defaultConfig","getLandingDirection","calculateDeploymentCircle","calculateFreeFall","driftX","driftY","throwDistance","calculateSpot","sin","track","cos","exitWind","at","exitAltitude","sog","getSpeedOverGround","jumpRunTAS","greenLightTime","calculateRedLight","getTimeBetweenGroups","jumpRunDuration","jumpRunLength","deplAltitude","finalAltitude","horizontalCanopySpeed","verticalCanopySpeed","windDirection","ld","delta","timeStep","horizontalVelocity","verticalVelocity","velocity","sqrt","dragAccel","getDragAcceleration","atan2","asin","dx","dy","midJumpRun","halfJumpRun","isNaN","redLightTime","deplWind","metersBetweenGroups","ceil","minTimeBetweenGroups","tas","speedAlongTrack","initialState","reducer","action","find","d","fetch","mapResp","arrayBuffer","Date","wnd","window","open","onload","focus","App","useReducer","useMemo","output","calculate","output2","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4915eeff.chunk.js","sourcesContent":["import { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\ntype OverridableNumberProps = {\n  label?: string;\n  helperText?: string;\n  value?: number;\n  defaultValue?: number;\n  onChange?: (v: number | undefined) => void;\n  className?: string;\n  unit?: string;\n  step?: number;\n  min?: number;\n  max?: number;\n};\n\nfunction OverridableNumber({\n  label,\n  helperText,\n  value,\n  defaultValue,\n  onChange,\n  className,\n  unit,\n  step,\n  min,\n  max,\n}: OverridableNumberProps) {\n  return (\n    <TextField\n      name=\"noname\" // TODO: Better way to avoid Chrome's password suggestions\n      type=\"number\"\n      label={label}\n      helperText={helperText}\n      className={className}\n      fullWidth\n      value={Math.round((value ?? defaultValue ?? 0) * 10) / 10}\n      onChange={(e) => onChange?.(Number(e.target.value))}\n      disabled={value === undefined}\n      inputProps={{ step, min, max }}\n      InputLabelProps={{ disabled: false }}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            {unit}\n            <IconButton\n              color={value === undefined ? \"default\" : \"secondary\"}\n              onClick={(e) =>\n                onChange?.(value === undefined ? defaultValue : undefined)\n              }\n            >\n              <EditIcon fontSize=\"small\" />\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n}\n\nexport default OverridableNumber;\n","import { TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\n\ntype Wind = { speed: number; direction: number };\n\ntype WindInputProps = {\n  label?: string;\n  helperText?: string;\n  value?: Wind;\n  onChange?: (v: Wind) => void;\n  className?: string;\n  error?: boolean;\n};\n\nfunction WindInput({\n  label,\n  helperText,\n  value,\n  onChange,\n  className,\n  error,\n}: WindInputProps) {\n  const [textValue, setTextValue] = useState<string | undefined>();\n  return (\n    <TextField\n      label={label}\n      helperText={helperText}\n      placeholder=\"E.g. 270/8kt\"\n      className={className}\n      value={\n        textValue ?? (value ? `${value.direction}/${value.speed ?? 0}kt` : \"\")\n      }\n      onChange={(e) => {\n        setTextValue(e.target.value);\n        const wind = parseWind(e.target.value);\n        if (wind) onChange?.(wind);\n      }}\n      onBlur={() => setTextValue(undefined)}\n      error={error}\n    />\n  );\n}\n\nfunction parseWind(str: string): Wind | null {\n  const match = /^([\\d.,]+)\\/([\\d.,]+)(kt)?$/.exec(str);\n  if (match) {\n    const direction = Math.round(Number(match[1]));\n    const speed = Math.round(Number(match[2]));\n    if (direction >= 0 && direction <= 360 && speed >= 0) {\n      return { direction: direction === 0 ? 360 : direction, speed };\n    }\n  }\n  return null;\n}\n\nexport default WindInput;\n","import {\n  Button,\n  Drawer,\n  FormControl,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { Dispatch } from \"react\";\nimport { Spot } from \"../App\";\nimport { Dropzone } from \"../dropzones\";\nimport { Action, AppState } from \"../state\";\nimport OverridableNumber from \"./OverridableNumber\";\nimport WindInput from \"./WindInput\";\n\nconst useStyles = makeStyles({\n  paper: {\n    width: 200,\n  },\n  form: {\n    margin: 12,\n  },\n  header: {\n    marginTop: 25,\n  },\n  input: {\n    marginTop: 8,\n  },\n  print: {\n    marginTop: 25,\n    textAlign: \"center\",\n  },\n});\n\nfunction LeftDrawer({\n  dropzones,\n  state,\n  dispatch,\n  spot,\n  onPrint,\n}: {\n  dropzones?: Dropzone[];\n  state: AppState;\n  dispatch: Dispatch<Action>;\n  spot?: Spot;\n  onPrint?: () => void;\n}) {\n  const classes = useStyles();\n  return (\n    <Drawer\n      variant=\"permanent\"\n      anchor=\"left\"\n      PaperProps={{ elevation: 24 }}\n      classes={{ paper: classes.paper }}\n    >\n      <form autoComplete=\"off\" className={classes.form}>\n        <FormControl fullWidth={true}>\n          <InputLabel>Dropzone</InputLabel>\n          <Select\n            value={state.dropzone.id}\n            onChange={(e) =>\n              dispatch({ type: \"dropzone\", id: e.target.value as string })\n            }\n          >\n            {dropzones?.map((dz) => (\n              <MenuItem key={dz.id} value={dz.id}>\n                {dz.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <div className={classes.header}>Winds</div>\n        <WindInput\n          label=\"FL100\"\n          value={state.winds.fl100}\n          onChange={(wind) =>\n            dispatch({ type: \"winds\", winds: { ...state.winds, fl100: wind } })\n          }\n          className={classes.input}\n          error={!state.winds.fl100}\n        />\n        <WindInput\n          label=\"2000 ft\"\n          value={state.winds[\"2000ft\"]}\n          onChange={(wind) =>\n            dispatch({\n              type: \"winds\",\n              winds: { ...state.winds, \"2000ft\": wind },\n            })\n          }\n          className={classes.input}\n          error={!state.winds[\"2000ft\"]}\n        />\n        <WindInput\n          label=\"Ground\"\n          value={state.winds.ground}\n          onChange={(wind) =>\n            dispatch({ type: \"winds\", winds: { ...state.winds, ground: wind } })\n          }\n          className={classes.input}\n          error={!state.winds.ground}\n        />\n\n        <div className={classes.header}>Spot</div>\n        <OverridableNumber\n          label=\"Landing direction\"\n          unit=\"°\"\n          step={10}\n          min={10}\n          max={360}\n          value={state.fixedParams.landingDirection}\n          defaultValue={spot?.landingDirection}\n          onChange={(val) =>\n            dispatch({\n              type: \"fixedParams\",\n              fixedParams: { ...state.fixedParams, landingDirection: val },\n            })\n          }\n          className={classes.input}\n        />\n        <OverridableNumber\n          label=\"Line of flight\"\n          unit=\"°\"\n          step={5}\n          min={5}\n          max={360}\n          value={state.fixedParams.lineOfFlight}\n          defaultValue={spot?.lineOfFlight}\n          onChange={(val) =>\n            dispatch({\n              type: \"fixedParams\",\n              fixedParams: { ...state.fixedParams, lineOfFlight: val },\n            })\n          }\n          className={classes.input}\n        />\n        <OverridableNumber\n          label=\"Off track\"\n          helperText=\"Positive right of track\"\n          unit=\"NM\"\n          step={0.1}\n          value={state.fixedParams.offTrack}\n          defaultValue={spot?.offTrack}\n          onChange={(val) =>\n            dispatch({\n              type: \"fixedParams\",\n              fixedParams: { ...state.fixedParams, offTrack: val },\n            })\n          }\n          className={classes.input}\n        />\n        <OverridableNumber\n          label=\"Distance\"\n          helperText=\"Positive past DZ\"\n          unit=\"NM\"\n          step={0.1}\n          value={state.fixedParams.distance}\n          defaultValue={spot?.distance}\n          onChange={(val) =>\n            dispatch({\n              type: \"fixedParams\",\n              fixedParams: { ...state.fixedParams, distance: val },\n            })\n          }\n          className={classes.input}\n        />\n\n        <div className={classes.print}>\n          <Button variant=\"contained\" color=\"primary\" onClick={onPrint}>\n            Print\n          </Button>\n        </div>\n      </form>\n    </Drawer>\n  );\n}\n\nexport default LeftDrawer;\n","import { Spot } from \"../App\";\nimport { AppState } from \"../state\";\n\ntype LivePreviewProps = {\n  state: AppState;\n  spot?: Spot;\n};\n\nfunction LivePreview({ state, spot }: LivePreviewProps) {\n  return (\n    <>\n      <div\n        style={{\n          position: \"fixed\",\n          width: \"100%\",\n          height: \"100%\",\n          backgroundImage: `url(${state.dropzone.url})`,\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n          filter: \"blur(calc(0.4vw))\",\n        }}\n      ></div>\n      <div style={{ position: \"absolute\", top: 50, left: 300 }}>\n        <h1>TODO: Live map preview</h1>\n        <p>For now, here is the raw data:</p>\n        <pre style={{ fontSize: 10 }}>\n          {JSON.stringify({ ...state, spot }, undefined, 4)}\n        </pre>\n      </div>\n    </>\n  );\n}\n\nexport default LivePreview;\n","export type Dropzone = {\n  id: string,\n  name: string,\n  allowedLandingDirections?: number[],\n  url: string,\n  width: number,\n  height: number,\n};\n\nconst dropzones: Dropzone[] = [\n  {\n      id: \"vargarda\",\n      name: \"Vårgårda\",\n      allowedLandingDirections: [40, 220],\n      url: \"/maps/vargarda.png\",\n      width: 1436,\n      height: 1000,\n  },\n  {\n      id: \"nasinge\",\n      name: \"Näsinge\",\n      allowedLandingDirections: [30, 210],\n      url: \"/maps/nasinge.png\",\n      width: 1436,\n      height: 1000,\n  },\n  {\n      id: \"skovde\",\n      name: \"Skövde\",\n      allowedLandingDirections: [10, 190],\n      url: \"/maps/skovde.png\",\n      width: 1436,\n      height: 1000,\n  },\n  {\n    id: \"koster\",\n    name: \"Koster\",\n    url: \"/maps/koster.png\",\n    width: 1436,\n    height: 1000,\n  },\n];\n\nexport default dropzones;\n","// Unit conversions\nexport const deg2rad = (deg: number) => (deg / 180) * Math.PI;\nexport const ft2m = (ft: number) => ft * 0.3048;\nexport const kt2ms = (kt: number) => (kt * 1852) / 3600;\nexport const m2nm = (m: number) => m / 1852;\nexport const ms2kt = (ms: number) => (ms * 3600) / 1852;\nexport const nm2m = (nm: number) => nm * 1852;\nexport const rad2deg = (rad: number) => (rad / Math.PI) * 180;\n\n// Normalize angle to 0 <= x < 2π\nexport function normalizeAngle(x: number) {\n    while (x < 0) x += 2 * Math.PI;\n    while (x >= 2 * Math.PI) x -= 2 * Math.PI;\n    return x;\n}\n\n// Normalize angle to -π < x <= π\nexport function normalizeAngleDiff(x: number) {\n    while (x <= Math.PI) x += 2 * Math.PI;\n    while (x > Math.PI) x -= 2 * Math.PI;\n    return x;\n}\n","import type PDFDocumentType from \"pdfkit\";\nimport { kt2ms, nm2m } from \"./calculation/utils\";\nimport BlobStream from \"blob-stream\";\n\n// We load the standalone version of PDFKit outside of webpack. (That was the\n// easiest way to get it browser compatible without ejecting create-react-app.)\ndeclare class PDFDocument extends PDFDocumentType { };\n\nexport async function renderAsBlobURL(input: Input) {\n    const stream = BlobStream();\n    new PdfGenerator(input, stream);\n    return new Promise<string>(resolve => stream.on(\"finish\", () => resolve(stream.toBlobURL(\"application/pdf\"))));\n}\n\nclass PdfGenerator {\n    private readonly mapScale = 1 / 25000;\n    private readonly doc: PDFDocument;\n    private readonly width: number;\n    private readonly height: number;\n    private pilotInfoWidth = 0;\n    private pilotInfoHeight = 0;\n    private windInfoWidth = 0;\n    private windInfoHeight = 0;\n    private jumperInfoWidth = 0;\n    private jumperInfoHeight = 0;\n    private footerWidth = 0;\n    private footerHeight = 0;\n\n    public constructor(private readonly data: Input, stream: NodeJS.WritableStream) {\n        const margin = 6;\n        this.doc = new PDFDocument({\n            size: \"a4\",\n            layout: \"landscape\",\n            margin: (margin / 25.4) * 72,\n            info: { Title: \"Spot\", },\n        });\n        this.doc.pipe(stream);\n\n        // Set mm as unit and add the margin.\n        this.doc.scale(72 / 25.4).translate(margin, margin);\n        this.width = 297 - 2 * margin;\n        this.height = 210 - 2 * margin;\n\n        this.renderPilotInfo();\n        this.renderWinds();\n        this.renderJumperInfo();\n        this.renderFooter();\n        this.renderMap();\n\n        this.doc.end();\n    }\n\n    private renderPilotInfo() {\n        const {\n            spot: { heading, transverseOffset, longitudinalOffset },\n            redLight: red,\n        } = this.data;\n\n        const offsetStr = (longitudinalOffset > 0 ? \"+\" : \"\") + longitudinalOffset.toFixed(1);\n        const line1 = `Green light ${angleStr(heading)}  ${offsetStr} NM`;\n        this.doc.fontSize(6).text(line1, 0, 0);\n        this.pilotInfoWidth = this.doc.widthOfString(line1) + 0.5;\n        if (transverseOffset !== 0) {\n            const side = transverseOffset > 0 ? \"Right\" : \"Left\";\n            const distance = Math.abs(transverseOffset).toFixed(1);\n            this.doc.text(`${side} off track  ${distance} NM`);\n        }\n        this.doc\n            .fontSize(3)\n            .text(`Red light:  ${angleStr(red.bearing)}  ${red.distance.toFixed(1)} NM`);\n        this.pilotInfoHeight = this.doc.y;\n    }\n\n    private renderWinds() {\n        this.doc.fontSize(3);\n        const winds = [...this.data.winds].reverse();\n        this.windInfoHeight = -1.5;\n        this.windInfoWidth = 21;\n        this.doc.save();\n        this.doc.translate(0, this.height);\n        for (const wind of winds) {\n            this.windInfoHeight += 30;\n            this.doc.translate(0, -30);\n            this.renderOneWind(wind);\n        }\n        this.doc.restore();\n    }\n\n    private renderOneWind({\n        altitudeDescr,\n        speed,\n        direction,\n    }: {\n        altitudeDescr: string,\n        speed: number,\n        direction: number,\n    }) {\n        this.doc.fontSize(3);\n        this.doc.text(altitudeDescr, 0, 2.5, { width: 20, align: \"center\" });\n        this.doc.text(`${direction.toFixed(0)}° / ${speed.toFixed(0)} kt`, { width: 20, align: \"center\" });\n\n        this.doc.save().translate(10.5, 19.5);\n\n        // Gray circle with tick marks\n        this.doc.circle(0, 0, 10).lineWidth(0.3).stroke(\"#d0d0d0\");\n        for (let i = 0; i < 8; i++) {\n            this.doc.rotate(45).moveTo(0, 10).lineTo(0, 8.5).stroke();\n        }\n\n        // Numeric wind speed\n        const ms = kt2ms(speed);\n        this.doc.fontSize(4).text(ms.toFixed(0), -5, -1.5, { width: 10, align: \"center\" });\n\n        // Wind arrow\n        if (ms >= 0.5) {\n            this.doc\n                .rotate(direction)\n                .moveTo(0, -9.5)\n                .lineTo(0, -3.5)\n                .lineWidth(1)\n                .stroke(\"black\")\n                .moveTo(0, -2.5)\n                .lineTo(-1.6, -5)\n                .lineTo(1.6, -5)\n                .closePath()\n                .fill(\"black\");\n        }\n        this.doc.restore();\n    }\n\n    private renderJumperInfo() {\n        this.doc.fontSize(5);\n        const text = `${this.data.timeBetweenGroups} seconds between groups`;\n        this.jumperInfoWidth = this.doc.widthOfString(text) + 1;\n        this.jumperInfoHeight = this.doc.heightOfString(text);\n\n        this.doc.text(text, this.windInfoWidth + 0.3, this.height - this.jumperInfoHeight + 1);\n    }\n\n    private renderFooter() {\n        const time = Intl.DateTimeFormat(\"sv-SE\", {\n            year: \"numeric\",\n            month: \"numeric\",\n            day: \"numeric\",\n            hour: \"numeric\",\n            minute: \"numeric\",\n        }).format(this.data.time);\n        const fullText = `${time}     spotten.nu     Map: © OpenStreetMap contributors`;\n        this.doc.fontSize(3);\n        const w = this.doc.widthOfString(fullText);\n        const h = this.doc.heightOfString(fullText);\n        this.doc\n            .text(time + \"     \", this.width - w - 0.3, this.height - h + 0.7, { continued: true })\n            .text(\"spotten.nu\", { link: \"https://spotten.nu/\", continued: true })\n            .text(\"     Map: © \", { link: null as unknown as string, continued: true })\n            .text(\"OpenStreetMap\", {\n                link: \"https://www.openstreetmap.org/copyright\",\n                continued: true,\n            })\n            .text(\" contributors\", { link: null as unknown as string });\n        this.footerWidth = w + 1;\n        this.footerHeight = h;\n    }\n\n    private renderMap() {\n        this.doc.save();\n        this.traceOutline();\n        this.doc.clip();\n\n        const { imageData, metersPerPixel, width, height, dz } = this.data.map;\n        this.doc\n            .save()\n            .translate(this.width / 2, this.height / 2)\n            .scale(1000 * this.mapScale)\n            .image(imageData, -dz.x * metersPerPixel, -dz.y * metersPerPixel, {\n                width: width * metersPerPixel,\n                height: height * metersPerPixel,\n            })\n            .restore();\n        this.renderSpot();\n        this.renderScale();\n        this.traceOutline();\n        this.doc.lineWidth(0.25).stroke(\"#e0e0e0\");\n        this.doc.restore();\n    }\n\n    private traceOutline() {\n        this.doc\n            .moveTo(this.pilotInfoWidth, 0)\n            .lineTo(this.width, 0)\n            .lineTo(this.width, this.height - this.footerHeight)\n            .lineTo(this.width - this.footerWidth, this.height - this.footerHeight)\n            .lineTo(this.width - this.footerWidth, this.height)\n            .lineTo(this.windInfoWidth + this.jumperInfoWidth, this.height)\n            .lineTo(this.windInfoWidth + this.jumperInfoWidth, this.height - this.jumperInfoHeight)\n            .lineTo(this.windInfoWidth, this.height - this.jumperInfoHeight)\n            .lineTo(this.windInfoWidth, this.height - this.windInfoHeight)\n            .lineTo(0, this.height - this.windInfoHeight)\n            .lineTo(0, this.pilotInfoHeight)\n            .lineTo(this.pilotInfoWidth, this.pilotInfoHeight)\n            .closePath();\n    }\n\n    private renderSpot() {\n        // Switch unit from mm to real-world meters.\n        this.doc\n            .save()\n            .translate(this.width / 2, this.height / 2)\n            .scale(1000 * this.mapScale, -1000 * this.mapScale);\n\n        // Draw the circles\n        this.doc\n            .lineWidth(10)\n            .circle(this.data.deplCircle.x, this.data.deplCircle.y, this.data.deplCircle.radius)\n            .stroke(\"#a0a0a0\")\n            .circle(this.data.exitCircle.x, this.data.exitCircle.y, this.data.exitCircle.radius)\n            .stroke(\"black\");\n\n        // Draw the DZ cross\n        this.doc\n            .moveTo(-25, -25)\n            .lineTo(25, 25)\n            .moveTo(25, -25)\n            .lineTo(-25, 25)\n            .lineWidth(15)\n            .stroke();\n\n        // Draw the arrow and green light circle\n        this.doc\n            .rotate(-this.data.spot.heading)\n            .translate(nm2m(this.data.spot.transverseOffset), 0)\n            .moveTo(0, -2000)\n            .lineTo(0, 2000)\n            .moveTo(0 - 100, 2000 - 100)\n            .lineTo(0, 2000)\n            .lineTo(0 + 100, 2000 - 100)\n            .lineWidth(25)\n            .stroke()\n            .circle(0, nm2m(this.data.spot.longitudinalOffset), 40)\n            .lineWidth(10)\n            .stroke();\n\n        this.doc.restore();\n    }\n\n    private renderScale() {\n        const numFmt = Intl.NumberFormat(\"sv-SE\", { maximumFractionDigits: 0 });\n        const denominator = numFmt.format(1 / this.mapScale);\n        this.doc\n            .save()\n            .translate(this.width, this.height - this.footerHeight)\n            .scale(1000 * this.mapScale)\n            .translate(-1120, -150);\n\n        // Tick marks\n        this.doc\n            .moveTo(0, 0)\n            .lineTo(1000, 0)\n            .moveTo(0, -50)\n            .lineTo(0, 50)\n            .moveTo(100, -30)\n            .lineTo(100, 0)\n            .moveTo(200, -30)\n            .lineTo(200, 0)\n            .moveTo(300, -30)\n            .lineTo(300, 0)\n            .moveTo(400, -30)\n            .lineTo(400, 0)\n            .moveTo(500, -50)\n            .lineTo(500, 0)\n            .moveTo(1000, -50)\n            .lineTo(1000, 0)\n            .moveTo(nm2m(0.1), 30)\n            .lineTo(nm2m(0.1), 0)\n            .moveTo(nm2m(0.2), 30)\n            .lineTo(nm2m(0.2), 0)\n            .moveTo(nm2m(0.3), 30)\n            .lineTo(nm2m(0.3), 0)\n            .moveTo(nm2m(0.4), 30)\n            .lineTo(nm2m(0.4), 0)\n            .moveTo(nm2m(0.5), 50)\n            .lineTo(nm2m(0.5), 0)\n            .lineWidth(8)\n            .stroke(\"black\");\n        // Labels\n        this.doc\n            .fontSize(70)\n            .text(\"500 m\", 500 - 200, -110, { width: 400, align: \"center\" })\n            .text(\"1 km\", 1000 - 200, -110, { width: 400, align: \"center\" })\n            .text(\"0.5 NM\", nm2m(0.5) - 200, 60, { width: 400, align: \"center\" });\n        // Scale\n        this.doc.text(`1 : ${denominator}`, -500, -20, { align: \"right\", width: 460 });\n        this.doc.restore();\n    }\n}\n\nfunction angleStr(deg: number) {\n    deg = Math.round(deg);\n    if (deg <= 0) deg += 360; // North is \"360\" - not \"000\".\n    return `00${deg}`.slice(-3) + \"°\";\n}\n\nexport type Input = {\n    map: {\n        imageData: ArrayBuffer;\n        metersPerPixel: number;\n        width: number;\n        height: number;\n        dz: { x: number; y: number };\n    };\n    winds: Array<{\n        altitudeDescr: string;\n        speed: number;\n        direction: number;\n    }>;\n    exitCircle: Circle;\n    deplCircle: Circle;\n    spot: {\n        heading: number;\n        longitudinalOffset: number;\n        transverseOffset: number;\n    };\n    redLight: {\n        bearing: number;\n        distance: number;\n    };\n    timeBetweenGroups: number;\n    jumpRunDuration: number;\n    time: Date;\n};\n\ntype Circle = {\n    x: number;\n    y: number;\n    radius: number;\n};\n","import { normalizeAngle, normalizeAngleDiff } from \"./utils\";\n\nexport class WindEstimator {\n    private readonly winds: Wind[];\n\n    public constructor(winds: Wind[]) {\n        if (winds.length < 1) {\n            throw new Error(\"At least one wind is required\");\n        }\n        this.winds = [...winds].sort((a, b) => a.altitude - b.altitude);\n    }\n\n    public at(altitude: number) {\n        if (altitude <= this.winds[0].altitude) {\n            return this.winds[0];\n        }\n        for (let i = 1; i < this.winds.length; i++) {\n            if (altitude < this.winds[i].altitude) {\n                return this.interpolate(this.winds[i - 1], this.winds[i], altitude);\n            }\n        }\n        return this.winds[this.winds.length - 1];\n    }\n\n    private interpolate(lower: Wind, upper: Wind, altitude: number) {\n        // Algorithms:\n        //  * Polar: Linearly interpolate speed and direction independently.\n        //  * Cartesian: Linearly interpolate the X and Y composants independently.\n        // Polar interpolation probably makes more sense in most cases. If the directions are close\n        // to 180° from eachother then maybe cartesian mode or a hybrid of the two is better?\n        // For now, do polar interpolation.\n        const alpha = (altitude - lower.altitude) / (upper.altitude - lower.altitude);\n        const speed = (1 - alpha) * lower.speed + alpha * upper.speed;\n        const angleDiff = normalizeAngleDiff(upper.direction - lower.direction);\n        const direction = normalizeAngle(lower.direction + alpha * angleDiff);\n        return { altitude, direction, speed };\n    }\n}\n\nexport type Wind = {\n    altitude: number;\n    speed: number;\n    direction: number;\n};\n","import { deg2rad, kt2ms, nm2m, normalizeAngle, normalizeAngleDiff } from \"./utils\";\nimport { Wind, WindEstimator } from \"./windEstimator\";\n\n// Note:\n//  * Units: All values are in meters, seconds, m/s and radians.\n//  * The origin is at the DZ and coordinates increase to the northeast.\n//  * Angles increase clockwise from 12 o'clock.\n//  * Wind angles are opposite to other angles and refer to where the wind is *coming from*.\n//  * Deployment altitude is the altitude where the canopy is fully deployed, not the SBF def.\n\nexport class SpotCalculator {\n    private readonly wind: WindEstimator;\n    private readonly config: Config;\n    private readonly fixedTrack: number | undefined;\n    private readonly fixedTransverseOffset: number | undefined;\n    private readonly allowedLandingDirections: number[] | undefined;\n\n    public constructor(input: Input) {\n        this.wind = new WindEstimator(input.winds);\n        this.fixedTrack = input.fixedTrack;\n        this.fixedTransverseOffset = input.fixedTransverseOffset;\n        this.allowedLandingDirections = input.allowedLandingDirections;\n        this.config = { ...defaultConfig, ...input.config };\n    }\n\n    public calculate(): Output {\n        const landingDirection = this.getLandingDirection();\n        const deplCircle = this.calculateDeploymentCircle(landingDirection);\n        const { driftX, driftY, throwDistance } = this.calculateFreeFall();\n        const exitCircle = { ...deplCircle };\n        exitCircle.x -= driftX;\n        exitCircle.y -= driftY;\n        const spot = this.calculateSpot(exitCircle);\n\n        exitCircle.x -= throwDistance * Math.sin(spot.track);\n        exitCircle.y -= throwDistance * Math.cos(spot.track);\n        spot.longitudinalOffset -= throwDistance;\n\n        const exitWind = this.wind.at(this.config.exitAltitude);\n        const sog = getSpeedOverGround(spot.track, this.config.jumpRunTAS, exitWind).speed;\n\n        spot.longitudinalOffset -= this.config.greenLightTime * sog;\n        spot.longitudinalOffset = nm2m(0.1) * Math.round(spot.longitudinalOffset / nm2m(0.1));\n\n        return {\n            track: spot.track,\n            longitudinalOffset: spot.longitudinalOffset,\n            transverseOffset: spot.transverseOffset,\n            landingDirection,\n            deplCircle,\n            exitCircle,\n            redLight: this.calculateRedLight(spot.track, spot.longitudinalOffset, sog),\n            timeBetweenGroups: this.getTimeBetweenGroups(spot.track),\n            jumpRunDuration: sog > 0 ? spot.jumpRunLength / sog : 0,\n        };\n    }\n\n    private calculateDeploymentCircle(landingDirection: number) {\n        const timeStep = 1;\n        let altitude = 0;\n        let x = 0;\n        let y = 0;\n        let radius = 0;\n        while (altitude < this.config.deplAltitude) {\n            const wind = this.wind.at(altitude);\n            if (altitude < this.config.finalAltitude) {\n                const { speed, direction } = getSpeedOverGround(\n                    landingDirection,\n                    this.config.horizontalCanopySpeed,\n                    wind,\n                );\n                x -= speed * Math.sin(direction) * timeStep;\n                y -= speed * Math.cos(direction) * timeStep;\n            } else {\n                x += wind.speed * Math.sin(wind.direction) * timeStep;\n                y += wind.speed * Math.cos(wind.direction) * timeStep;\n                radius += this.config.horizontalCanopySpeed * timeStep;\n            }\n            altitude += this.config.verticalCanopySpeed * timeStep;\n        }\n        return { x, y, radius };\n    }\n\n    private getLandingDirection() {\n        const windDirection = this.wind.at(0).direction;\n        if (!this.allowedLandingDirections) {\n            return windDirection;\n        }\n        return this.allowedLandingDirections\n            .map(ld => ({ ld, delta: Math.abs(normalizeAngleDiff(windDirection - ld)) }))\n            .sort((a, b) => a.delta - b.delta)[0].ld;\n    }\n\n    private calculateFreeFall() {\n        const timeStep = 0.2;\n        let throwDistance = 0;\n        let altitude = this.config.exitAltitude;\n        let horizontalVelocity = this.config.jumpRunTAS;\n        let verticalVelocity = 0;\n        let driftX = 0;\n        let driftY = 0;\n        while (altitude > this.config.deplAltitude) {\n            const wind = this.wind.at(altitude);\n            driftX -= wind.speed * Math.sin(wind.direction) * timeStep;\n            driftY -= wind.speed * Math.cos(wind.direction) * timeStep;\n\n            const velocity = Math.sqrt(horizontalVelocity ** 2 + verticalVelocity ** 2);\n            const dragAccel = getDragAcceleration(velocity, altitude);\n            throwDistance += horizontalVelocity * timeStep;\n            altitude -= verticalVelocity * timeStep;\n            if (velocity > 0) {\n                horizontalVelocity -= (horizontalVelocity / velocity) * dragAccel * timeStep;\n                verticalVelocity -= (verticalVelocity / velocity) * dragAccel * timeStep;\n            }\n            verticalVelocity += 9.81 * timeStep;\n        }\n        return { driftX, driftY, throwDistance };\n    }\n\n    private calculateSpot(circle: Circle) {\n        let track = this.fixedTrack;\n        let transverseOffset = this.fixedTransverseOffset;\n      if (transverseOffset === undefined) {\n            // TODO: Should we use the wind at deployment altitude instead?\n            const windDirection = this.wind.at(this.config.exitAltitude).direction;\n            track = track ?? normalizeAngle(deg2rad(5) * Math.round(windDirection / deg2rad(5)));\n\n            // Find the transverseOffset that puts the track straight through the circle's center.\n            transverseOffset = circle.x * Math.cos(track) - circle.y * Math.sin(track);\n            transverseOffset = nm2m(0.1) * Math.round(transverseOffset / nm2m(0.1));\n        } else if (track === undefined) {\n            // Find the direction that puts the track straight through the circle's center.\n            track =\n                Math.atan2(circle.x, circle.y) -\n                Math.asin(transverseOffset / Math.sqrt(circle.x ** 2 + circle.y ** 2));\n            track = normalizeAngle(deg2rad(5) * Math.round(track / deg2rad(5)));\n        }\n\n        // Find the longitudinalOffset that puts the exit point right at the edge of the circle.\n        const dx = circle.x - transverseOffset * Math.cos(track);\n        const dy = circle.y + transverseOffset * Math.sin(track);\n        const midJumpRun = dx * Math.sin(track) + dy * Math.cos(track);\n        const halfJumpRun = Math.sqrt(midJumpRun ** 2 - dx ** 2 - dy ** 2 + circle.radius ** 2);\n        const longitudinalOffset = midJumpRun - halfJumpRun;\n        if (isNaN(longitudinalOffset)) {\n            throw new Error(\"The jump run does not intersect the exit circle\");\n        }\n\n        return { track, longitudinalOffset, transverseOffset, jumpRunLength: 2 * halfJumpRun };\n    }\n\n    private calculateRedLight(track: number, longitudinalOffset: number, sog: number) {\n        return {\n            bearing: normalizeAngle(track + Math.PI),\n            distance:\n                nm2m(0.1) *\n                Math.round((longitudinalOffset + this.config.redLightTime * sog) / nm2m(0.1)),\n        };\n    }\n\n    private getTimeBetweenGroups(track: number) {\n        const exitWind = this.wind.at(this.config.exitAltitude);\n        const deplWind = this.wind.at(this.config.deplAltitude);\n        const timeBetweenGroups =\n            this.config.metersBetweenGroups /\n            (getSpeedOverGround(track, this.config.jumpRunTAS, exitWind).speed +\n                deplWind.speed * Math.cos(deplWind.direction - track));\n        return Math.ceil(Math.max(this.config.minTimeBetweenGroups, timeBetweenGroups));\n    }\n}\n\nfunction getSpeedOverGround(track: number, tas: number, wind: Wind) {\n    // The aircraft/canopy is crabbing along the track. We split the wind into two composants: along\n    // the track and perpendicular to it. The perpendicular wind is compensated by crabbing but\n    // we get a reduced speed along the track. The parallel composant must be subtracted.\n    const speedAlongTrack = Math.sqrt(\n        tas ** 2 - (wind.speed * Math.sin(wind.direction - track)) ** 2,\n    );\n    if (isNaN(speedAlongTrack)) {\n        // Too high wind to fly the track - fly (backwards) into the wind instead.\n        return { speed: tas - wind.speed, direction: wind.direction };\n    } else {\n        const headWind = wind.speed * Math.cos(wind.direction - track);\n        return { speed: speedAlongTrack - headWind, direction: track };\n    }\n}\n\nfunction getDragAcceleration(velocity: number, altitude: number) {\n    // The drag equation (https://en.wikipedia.org/wiki/Drag_equation) and Newton's second law give:\n    //  a_drag = F_drag / m = 1/2 * rho * v² * C_d * A / m\n    // We combine everything except the air density (rho) and velocity (v) into a single\n    // coefficient. 0.003 m²/kg was chosen to give a terminal velocity of 199 km/h at 1200 m\n    // AMSL. (The same altitude used in L&B's SAS calculations.) The DZ is assumed to be at sea\n    // level. The air density equation is from\n    // https://en.wikipedia.org/wiki/Barometric_formula#Density_equations\n    const airDensity =\n        1.225 *\n        (288.15 / (288.15 - 0.0065 * altitude)) ** (1 - (9.81 * 0.0289644) / 8.3144598 / 0.0065);\n    return 0.003 * airDensity * velocity ** 2;\n}\n\nexport const defaultConfig: Config = {\n    exitAltitude: 4000,\n    deplAltitude: 700,\n    finalAltitude: 100,\n    jumpRunTAS: kt2ms(93),\n    redLightTime: 150, // TODO: We want 2 minutes, but the aircraft is flying >jumpRunTAS\n    greenLightTime: 10,\n    horizontalCanopySpeed: 9,\n    verticalCanopySpeed: 4,\n    metersBetweenGroups: 250,\n    minTimeBetweenGroups: 5,\n};\n\ntype Input = {\n    winds: Wind[];\n    fixedTrack?: number | undefined;\n    fixedTransverseOffset?: number;\n    allowedLandingDirections?: number[];\n    config?: Partial<Config>;\n};\n\ntype Config = {\n    exitAltitude: number;\n    deplAltitude: number;\n    finalAltitude: number;\n    jumpRunTAS: number;\n    redLightTime: number;\n    greenLightTime: number;\n    horizontalCanopySpeed: number;\n    verticalCanopySpeed: number;\n    metersBetweenGroups: number;\n    minTimeBetweenGroups: number;\n};\n\ntype Output = {\n    track: number;\n    longitudinalOffset: number;\n    transverseOffset: number;\n    landingDirection: number;\n    deplCircle: Circle;\n    exitCircle: Circle;\n    redLight: { bearing: number; distance: number };\n    timeBetweenGroups: number;\n    jumpRunDuration: number;\n};\n\ntype Circle = {\n    x: number;\n    y: number;\n    radius: number;\n};\n","import dropzones from \"./dropzones\";\nimport { defaultConfig } from \"./calculation/spotCalculator\";\n\nexport type Wind = { direction: number; speed: number };\nexport type AppState = typeof initialState;\nexport type Winds = typeof initialState[\"winds\"];\nexport type FixedParams = typeof initialState[\"fixedParams\"];\nexport type Config = typeof initialState[\"config\"];\n\nexport const initialState = {\n  dropzone: dropzones[0],\n  winds: {\n    fl100: undefined as undefined | Wind,\n    \"2000ft\": undefined as undefined | Wind,\n    ground: undefined as undefined | Wind,\n  },\n  fixedParams: {\n    landingDirection: undefined as undefined | number,\n    lineOfFlight: undefined as undefined | number,\n    offTrack: undefined as undefined | number,\n    distance: undefined as undefined | number,\n  },\n  config: defaultConfig,\n};\n\nexport type Action =\n  | { type: \"dropzone\"; id: string }\n  | { type: \"winds\"; winds: Winds }\n  | { type: \"fixedParams\"; fixedParams: FixedParams }\n  | { type: \"config\"; config: Config };\n\nexport function reducer(state: AppState, action: Action): AppState {\n  switch (action.type) {\n    case \"dropzone\":\n      const dropzone = dropzones.find((d) => d.id === action.id);\n      return {\n        ...state,\n        fixedParams: initialState.fixedParams,\n        dropzone: dropzone ?? state.dropzone,\n      };\n\n    case \"winds\":\n      return {\n        ...state,\n        winds: action.winds,\n      };\n\n    case \"fixedParams\":\n      return {\n        ...state,\n        fixedParams: action.fixedParams,\n      };\n\n    case \"config\":\n      return {\n        ...state,\n        config: action.config,\n      };\n  }\n}\n","import { useMemo, useReducer } from \"react\";\nimport LeftDrawer from \"./components/LeftDrawer\";\nimport LivePreview from \"./components/LivePreview\";\nimport dropzones, { Dropzone } from \"./dropzones\";\nimport { renderAsBlobURL } from \"./pdfGenerator\";\nimport {\n  AppState,\n  Config,\n  FixedParams,\n  initialState,\n  reducer,\n  Winds,\n} from \"./state\";\nimport { deg2rad, ft2m, kt2ms, m2nm, nm2m, rad2deg } from \"./calculation/utils\";\nimport { SpotCalculator } from \"./calculation/spotCalculator\";\n\nexport type Spot = ReturnType<typeof calculateSpot>;\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const spot = useMemo(\n    () =>\n      calculateSpot(\n        state.dropzone,\n        state.winds,\n        state.fixedParams,\n        state.config\n      ),\n    [state.dropzone, state.winds, state.fixedParams, state.config]\n  );\n  return (\n    <>\n      <LeftDrawer\n        dropzones={dropzones}\n        state={state}\n        dispatch={dispatch}\n        spot={spot}\n        onPrint={() => print(state, spot)}\n      />\n      <LivePreview state={state} spot={spot} />\n    </>\n  );\n}\n\nfunction calculateSpot(\n  dz: Dropzone,\n  winds: Winds,\n  fixedParams: FixedParams,\n  config: Config\n) {\n  const input = {\n    winds: [\n      {\n        altitude: ft2m(10000),\n        direction: deg2rad(winds.fl100?.direction ?? 0),\n        speed: kt2ms(winds.fl100?.speed ?? 0),\n      },\n      {\n        altitude: ft2m(2000),\n        direction: deg2rad(winds[\"2000ft\"]?.direction ?? 0),\n        speed: kt2ms(winds[\"2000ft\"]?.speed ?? 0),\n      },\n      {\n        altitude: ft2m(0),\n        direction: deg2rad(winds.ground?.direction ?? 0),\n        speed: kt2ms(winds.ground?.speed ?? 0),\n      },\n    ],\n    fixedTrack:\n      fixedParams.lineOfFlight === undefined\n        ? undefined\n        : deg2rad(fixedParams.lineOfFlight),\n    fixedTransverseOffset:\n      fixedParams.offTrack === undefined\n        ? undefined\n        : nm2m(fixedParams.offTrack),\n    allowedLandingDirections: fixedParams.landingDirection\n      ? [deg2rad(fixedParams.landingDirection)]\n      : dz.allowedLandingDirections?.map(deg2rad),\n    config,\n  };\n  const output = new SpotCalculator(input).calculate();\n\n  const output2 = {\n    lineOfFlight: rad2deg(output.track),\n    offTrack: m2nm(output.transverseOffset),\n    distance: fixedParams.distance ?? m2nm(output.longitudinalOffset),\n    deplCircle: output.deplCircle,\n    exitCircle: output.exitCircle,\n    redLight: {\n      bearing: rad2deg(output.redLight.bearing),\n      distance: m2nm(output.redLight.distance),\n    },\n    landingDirection: rad2deg(output.landingDirection),\n    timeBetweenGroups: output.timeBetweenGroups,\n    jumpRunDuration: output.jumpRunDuration,\n  };\n  console.log({ input, output, output2 });\n  return output2;\n}\n\nasync function print(state: AppState, spot: Spot) {\n  const mapResp = await fetch(state.dropzone.url);\n  const imageData = await mapResp.arrayBuffer();\n\n  const data = await renderAsBlobURL({\n    map: {\n      imageData,\n      metersPerPixel: 5,\n      width: state.dropzone.width,\n      height: state.dropzone.height,\n      dz: { x: state.dropzone.width / 2, y: state.dropzone.height / 2 },\n    },\n    winds: [\n      {\n        altitudeDescr: \"FL100\",\n        speed: state.winds.fl100?.speed ?? 0,\n        direction: state.winds.fl100?.direction ?? 0,\n      },\n      {\n        altitudeDescr: \"2000 ft\",\n        speed: state.winds[\"2000ft\"]?.speed ?? 0,\n        direction: state.winds[\"2000ft\"]?.direction ?? 0,\n      },\n      {\n        altitudeDescr: \"Ground\",\n        speed: state.winds.ground?.speed ?? 0,\n        direction: state.winds.ground?.direction ?? 0,\n      },\n    ],\n    exitCircle: spot.exitCircle,\n    deplCircle: spot.deplCircle,\n    spot: {\n      heading: spot.lineOfFlight,\n      longitudinalOffset: spot.distance,\n      transverseOffset: spot.offTrack,\n    },\n    redLight: {\n      bearing: spot.redLight.bearing,\n      distance: spot.redLight.distance,\n    },\n    timeBetweenGroups: spot.timeBetweenGroups,\n    jumpRunDuration: spot.jumpRunDuration,\n    time: new Date(),\n  });\n\n  const wnd = window.open(data);\n  if (!wnd) return;\n  wnd.onload = () => {\n    wnd.focus();\n    wnd.print();\n  };\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}